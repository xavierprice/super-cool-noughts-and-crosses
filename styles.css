*,
*::after,
*::before {
  box-sizing: border-box;
}

:root {
  --cell-size: 50px;
  --marker-size: calc(var(--cell-size) * 0.9);
  --large-cell-size: 200px;
  --large-marker-size: calc(var(--large-cell-size) * 0.9);
}

body {
  margin: 0;
}

.container {
  width: 100vw;
  height: 100vh;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}

.board {
  width: 100%;
  height: 33.3vh;
  padding: 20px;
  display: grid;
  justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center;
  position: relative;
  grid-template-columns: repeat(3, auto);
  border: 2px solid black;
}

.board.disable-click {
  pointer-events: none;
  background-color: lightgrey;
}

.board.allow-click {
  pointer-events: auto;
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}

.cell.x,
.cell.circle,
.large-cell.large-x,
.large-cell.large-circle {
  cursor: not-allowed;
  pointer-events: none;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3),
.board:first-child,
.board:nth-child(2),
.board:nth-child(3) {
  border-top: none;
}

.cell:nth-child(3n + 1),
.board:nth-child(3n + 1) {
  border-left: none;
}

.cell:nth-child(3n + 3),
.board:nth-child(3n + 3) {
  border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7),
.board:last-child,
.board:nth-child(8),
.board:nth-child(7),
.board:nth-child(9) {
  border-bottom: none;
}

.cell.x::before,
.cell.x::after,
.large-cell.large-x::before,
.large-cell.large-x::after,
.cell.circle::before,
.large-cell.large-circle::before {
  background-color: black;
}

.board .cell:not(.x):not(.circle):hover::before,
.board .cell:not(.x):not(.circle):hover::after {
  background-color: lightgrey;
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  content: "";
  position: absolute;
  width: calc(var(--marker-size) * 0.15);
  height: var(--marker-size);
}

.large-cell.large-x::before,
.large-cell.large-x::after {
  content: "";
  position: absolute;
  width: calc(var(--large-marker-size) * 0.15);
  height: var(--large-marker-size);
  background-color: black;
}

.cell.x::before,
.large-cell.large-x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
  transform: rotate(45deg);
}

.cell.x::after,
.large-cell.large-x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
  transform: rotate(-45deg);
}

.cell.circle::before,
.cell.circle::after,
.large-cell.large-circle::before,
.large-cell.large-circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after {
  content: "";
  position: absolute;
  border-radius: 50%;
}

/* small circle css */

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--marker-size);
  height: var(--marker-size);
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--marker-size) * 0.7);
  height: calc(var(--marker-size) * 0.7);
  background-color: white;
}

.board.disable-click .cell.circle::before,
.cell.circle.disable-click::before,
.board.disable-click .board.circle .cell:not(.x):not(.circle):hover::before,
.cell.circle.disable-click .cell:not(.x):not(.circle):hover::before {
  width: var(--marker-size);
  height: var(--marker-size);
}

.board.disable-click .cell.circle::after,
.cell.circle.disable-click::after,
.board.disable-click .board.circle .cell:not(.x):not(.circle):hover::after,
.cell.circle.disable-click .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--marker-size) * 0.7);
  height: calc(var(--marker-size) * 0.7);
  background-color: lightgrey;
}

/* large circle css */

.large-cell.large-circle::before {
  width: var(--large-marker-size);
  height: var(--large-marker-size);
}

.large-cell.large-circle::after {
  width: calc(var(--large-marker-size) * 0.7);
  height: calc(var(--large-marker-size) * 0.7);
  background-color: white;
}

.board.disable-click .large-cell.large-circle::before,
.large-cell.large-circle.disable-click::before {
  width: var(--large-marker-size);
  height: var(--large-marker-size);
}

.board.disable-click .large-cell.large-circle::after,
.large-cell.large-circle.disable-click::after {
  width: calc(var(--large-marker-size) * 0.7);
  height: calc(var(--large-marker-size) * 0.7);
  background-color: lightgrey;
}

.message-container {
  display: flex;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.9);
  justify-content: center;
  align-items: center;
  color: white;
  flex-direction: column;
  font-size: 5rem;
}

#message-container.hide {
  display: none;
}

.welcome-message {
  display: flex;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  justify-content: center;
  align-items: center;
  color: white;
  flex-direction: column;
}

.welcome-message span {
  font-size: 5rem;
}

.welcome-message button {
  font-size: 2.5rem;
  background-color: white;
  border: 1px solid black;
  padding: 0.25em 0.5em;
  cursor: pointer;
  border-radius: 20px;
}

.welcome-message .how-to-play-button {
  margin-top: 1rem;
}

.welcome-message button:hover {
  background-color: black;
  color: white;
  border-color: white;
}

.winning-message {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.9);
  justify-content: center;
  align-items: center;
  color: white;
  font-size: 5rem;
  flex-direction: column;
}

.winning-message button {
  font-size: 3rem;
  background-color: white;
  border: 1px solid black;
  padding: 0.25em 0.5em;
  cursor: pointer;
  border-radius: 20px;
}

.winning-message button:hover {
  background-color: black;
  color: white;
  border-color: white;
}

.winning-message.show {
  display: flex;
}

.button-container button {
  font-size: 1.5rem;
  background-color: white;
  border: 1px solid black;
  padding: 0.25em 0.5em;
  margin-top: 1rem;
  cursor: pointer;
  border-radius: 20px;
}

.button-container button:hover {
  background-color: black;
  color: white;
  border-color: white;
}

/*menu icon styles*/
.menu-toggle {
  justify-content: space-around;
  cursor: pointer;
  padding: 15px;
  position: fixed;
  right: 0px;
  z-index: 999;
  transition: transform 0.3s ease;
}

.menu-toggle.active {
  opacity: 0;
  pointer-events: none;
}

.bar {
  width: 25px;
  height: 3px;
  background-color: black;
  margin: 4px 0;
  transition: 0.4s;
}

/* Menu styles */
.menu {
  display: flex;
  justify-content: center;
  width: 0;
  height: 100%;
  position: fixed;
  top: 0;
  right: 0;
  background-color: #333;
  overflow-x: hidden;
  transition: 0.4s;
  z-index: 998;
}

.menu .button-container {
  display: flex;
  flex-direction: column;
  justify-content: start;
  margin-top: 100px;
}

.close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: transparent;
  border: none;
  color: white;
  font-size: 24px;
  cursor: pointer;
  display: none;
}

.menu.open .close-button {
  display: block;
}

.menu.open {
  width: 180px;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.9);
  z-index: 997;
  display: none;
}

.overlay.visible {
  display: block;
  pointer-events: auto;
}

.how-to-play.show {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgba(
    255,
    255,
    255,
    0.9
  ); /* Semi-transparent background for readability */
  padding: 20px;
  max-width: 80%; /* Set a maximum width if needed */
  text-align: center;
  z-index: 998; /* Adjust the z-index as needed */
}

.how-to-play.show .close-button {
  display: block;
  color: rgba(0, 0, 0, 0.9);
}

.how-to-play {
  display: none;
}
